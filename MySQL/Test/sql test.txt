1. Retrieve the names of all customers from the `Customers` table, sorted in alphabetical order.

select customerName from Customers order by customerName asc;
================================================================================================
2. Fetch the top 10 most expensive products from the `Products` table.

select product_name, price from product order by price desc limit 10;
=================================================================================================
3. Write a query to get the second-highest salary from the `Employees` table.

SELECT MAX(salary) FROM Employees 
WHERE salary < (SELECT MAX(salary) FROM Employees);
================================================================================================
4. Get the total count of customers from each city in the `Customers` table.

select city, count(*) from customer group by department_id HAVING SUM(salary) > 200000; ;
================================================================================================
5. Retrieve department-wise total salary from the `Employees` table but only include
departments where the total salary is greater than 2,00,000.

select  department_id sum(salary) from employee  
==================================================================================================
6. Extract only the last four characters of the `phone_number` column and first three characters
from `customerName` columns from the `Customers` table.


=================================================================================================
7. Write a query to retrieve products where the `product_name` contains "Pro".

SELECT * FROM Products WHERE product_name LIKE '%Pro%';

=================================================================================================
8. Fetch the total number of students per course from the `Students` table, only for courses that

have at least 30 students enrolled.
SELECT course_id, COUNT(*) 
FROM Students GROUP BY course_id HAVING COUNT(*) >= 30;
==================================================================================================
9. Write an SQL query to find the number of orders placed in each month of the year.

SELECT MONTH(order_date), COUNT(*) 
FROM Orders GROUP BY MONTH(order_date);
======================================================================================================
10. Get the highest and lowest salary per department from the `Employees` table.

SELECT department_id, MAX(salary), MIN(salary) 
FROM Employees GROUP BY department_id;
========================================================================================================

11. What does the following query return?
SELECT SUBSTRING('Database', 1, 4);
a) Data
b) tabase
c) DataB
d) Error

Data
=========================================================================================================
12. Which clause is used to sort the results in descending order?
a) ORDER BY DESC
b) ORDER BY ASC
c) SORT BY DESC
d) GROUP BY DESC

order by desc
=============================================================================================================
13. What is the default sorting order of `ORDER BY` if no direction (ASC/DESC) is specified?
a) ASC
b) DESC
c) No specific order
d) Error

ASC
===============================================================================================================
14. What will be the output of the following query?
SELECT ROUND(15.678, 2);
a) 15.67
b) 15.68
c) 15.7
d) 16

15.68
================================================================================================================

15. Which SQL function is used to count the number of rows in a table?
a) TOTAL()
b) COUNT()
c) SUM()
d) NUMBER()

count();
====================================================================================================================
16. Question:
You have two tables:
• Orders with columns: order_id, customer_id, order_date, total_amount.
• Customers with columns: customer_id, customer_name.
• O/P- customer_id, customer_name, avg_order_value
Write an SQL query to find the average order value (total_amount) for each customer. Only
include customers who have made more than 2 orders.

SELECT c.customer_id, c.customer_name, AVG(o.total_amount)
FROM Customers c JOIN Orders o ON c.customer_id=o.customer_id
GROUP BY c.customer_id, c.customer_name HAVING COUNT(o.order_id) > 2;
========================================================================================================================
17. Question:
You have two tables:
• Products with columns: product_id, product_name.
• Sales with columns: sale_id, product_id, sale_date, amount.
• O/P- product_id | product_name | sales_count
Write an SQL query to find the number of sales made for each product. Only include products
with more than 50 sales.

SELECT p.product_id, p.product_name, COUNT(s.sale_id)
FROM Products p JOIN Sales s ON p.product_id=s.product_id
GROUP BY p.product_id, p.product_name HAVING COUNT(s.sale_id) > 50;